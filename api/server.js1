var express = require('express')
, app = module.exports = express()
, query = require('./services/queryService.js')
, serverService = require('./services/serverService.js')
, databaseService = require('./services/databaseService.js')
, collectionService = require('./services/collectionService.js')
, userService = require('./services/userService.js');

app.use(express.bodyParser());

app.post('/allServers', function (req, res) {
    var servers = new serverService();
    servers.load(req, res);
 
});
app.post('/newServer', function (req, res) {
    var servers = new serverService();
    servers.addServer(req, res);
});
app.post('/expandNavigation', function (req, res) {
    var requestType = req.body.type;
    switch (requestType) {
        case "server":
            new serverService().getServerDbs(req, res);
            break;
        case "database":
            new databaseService().getDbCollections(req, res)
            break;
        case "property":
            new collectionService().getCollectionInfo(req, res)
            break;
         case "index":
            new collectionService().getCollectionIndexInfo(req, res)
            break;
        default:
            return res.send(200);
    }

});
app.post('/createDb', function (req, res) {
    var dbController = new databaseService();
    dbController.getDbStats(req, res);
});
app.post('/documentQuery', function (req, res) {
    var q = new query();
    q.executeMongo(req, res);
});
app.post('/sqlQuery', function (req, res) {
    var q = new query();
    q.executeSql(req, res);
});
app.post('/serverStats', function (req, res) {
    var sc = new serverService();
    sc.getServerStatus(req, res);
});
app.post('/dbStats', function (req, res) {
    var dbService = new databaseService();
    dbService.getDbStats(req, res);
});
app.post('/replSetGetStatus', function (req, res) {
     var sc = new serverService();
    sc.replSetGetStatus(req, res);
});
app.post('/collectionStats', function (req, res) {
    var cnt = new collectionService();
    cnt.getCollectionStats(req, res);
});
app.post('/createCollection', function (req, res) {
       var cnt = new collectionService();
    cnt.createCollection(req, res);
});
app.post('/renameCollection', function (req, res) {
    var cc = new collectionService();
    cc.renameCollection(req,res);
});
app.post('/replaceDocument', function (req, res) {
       var q = new query();
    q.executeReplace(req, res);
});
app.post('/addUser', function (req, res) {
    var uc = new userService();
    uc.addUser(req, res);
});
app.post('/loadUsers', function (req, res) {
    var uc = new userService();
    uc.loadUsers(req, res);
});
app.post('/removeUser', function (req, res) {
    var uc = new userService();
    uc.removeUser(req, res);
});
app.post('/editUser', function (req, res) {
    var uc = new userService();
    uc.editUser(req, res);
});


